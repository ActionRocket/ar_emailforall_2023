--- 
title: Resources | Email for All - Action Rocket and Beyond the Envelope
body_class: base
layout: "base.njk" 
---

    <div class="inner">
        <h1>Resources for empowering accessibility</h1>
        <p>We want to help you make informed decisions with accessibility at the forefront. So here&apos;s some of our working brand resources to assist.</p>

        <ul class="resource-list">
            <li>
                <img src="/assets/images/icon-pdf.png" width="40">
                <p><a href="https://emailforall.co.uk/assets/Email-For-All.pdf">Download the Email for All report</a></p>
            </li>
         </ul>
         <h2>ActionRocket Blogs</h2>
         <ul class="resource-list">
            <li><a href="https://www.actionrocket.co/blog/designerchecklist">A Designers Accessibility Checklist</a></li>
            <li><a href="https://www.actionrocket.co/blog/coding-accessible-emails">Getting Started: Coding Accessible Emails</a></li>
        </ul>
        <h2>Accessibility Q&A's</h2>
         <ul class="resource-list">
            <li><a href="https://www.actionrocket.co/blog/interview-maganle">Magan Le</a></li>
            <li><a href="https://www.actionrocket.co/blog/interview-paulairy">Paul Airy</a></li>
            <li><a href="https://www.actionrocket.co/blog/interview-markrobbins">Mark Robbins</a></li>
            <li><a href="https://www.actionrocket.co/blog/interview-kaitcreamer">Kait Creamer</a></li>
            <li><a href="https://www.actionrocket.co/blog/nationaltrust">The National Trust</a></li>
        </ul>
        <h2>Curious to see what a fully AAA+ compliant Email Design System looks like?</h2>
        <p>
            We&apos;ve taken our Email Weekly template and given it a full AAA+ overhaul. Whilst the template has always adhered to AA accessibility best practices, we were keen to see what meeting the highest accessibility standards would look like. Scroll through the email below to explore the modifications made to make it fully compliant.
        </p>

        </div>

        <div class="two-col">
            <div class="hotspot">
                <img class="overlay" src="/assets/images/overlay.png" alt="Email Weekly" />
                <div class="hotspot-inner">
                    <iframe src="/assets/email-weekly.html" frameborder="0" width="100%" height="100%" tabindex="-1" title="Email Weekly - AAA Accessible Example"></iframe>
                </div>
            </div>
            <div class="dialog">
                <p id="hotspot1" class="hotspot active"><strong>Colour contrast</strong> - While our brand red meets the AA compliance for colour contrast, it doesn't quite meet the stricter AAA standards. So we've changed our brand red and other colours across the email to meet the 7:1 ratio.</p>
                <p id="hotspot2" class="hotspot"><strong>Layout changes</strong> - The AAA guidelines have stricter requirements for how elements are positioned on the page, in particular the distance between distinct sections. We've also added a clear CTA link at the end of each article to keep a meaningful sequence.</p>
                <p id="hotspot3" class="hotspot"><strong>Disabling animations</strong> - Animations and moving content can be distracting or disorienting for some people. As such, we've used the <code>prefers-reduced-motion</code> media query to disable CSS animations and GIFs for those who have enabled the setting on their device.</p>
            </div>

    </div>
    <script>


    //add event listener to iframe scroll
    const iframe = document.querySelector('iframe');
    let prevHotspot = "hotspot1";

    iframe.addEventListener('load', function() {
            let hotspotScroll = {
                "hotspot1": 690,
                "hotspot2": 1200,
                "hotspot3": 1800
            };
        iframe.contentWindow.addEventListener('scroll', function() {
            //get scroll position
            let scrollPos = iframe.contentWindow.pageYOffset;
            //find the next greatest hotspot
            let nextHotspot = Object.values(hotspotScroll).find(function(hotspot) {
                return hotspot > scrollPos;
            });

            console.log(scrollPos)

            //get the key for the next greatest hotspot
            let nextHotspotKey = Object.keys(hotspotScroll).find(function(key) {
                return hotspotScroll[key] === nextHotspot;
            });


            //if nextHotspotKey is undefined, set it to the last hotspot
            if (typeof nextHotspotKey === 'undefined') {
                nextHotspotKey = Object.keys(hotspotScroll)[Object.keys(hotspotScroll).length - 1];
            }

            //if the next hotspot is the same as the previous hotspot, do nothing
            if (nextHotspotKey === prevHotspot) {
                return;
            }

            //remove active class from all hotspots
            document.querySelectorAll('.hotspot').forEach(function(hotspot) {
                hotspot.classList.remove('active');
            });

            //add active class to the next hotspot
            document.querySelector('#' + nextHotspotKey).classList.add('active');

            //set the previous hotspot to the current hotspot
            prevHotspot = nextHotspotKey;
            
            
        });
    });
    </script>
